import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score, f1_score

class ManufacturingModel:
    def __init__(self):
        self.model = DecisionTreeClassifier()
        self.metrics = {}

    def train(self, data):
        X = data[['Temperature', 'Run_Time']]
        y = data['Downtime_Flag']
        X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
        
        self.model.fit(X_train, y_train)
        y_pred = self.model.predict(X_test)
        
        self.metrics = {
            "accuracy": accuracy_score(y_test, y_pred),
            "f1_score": f1_score(y_test, y_pred)
        }
        return self.metrics

    def predict(self, input_data):
        prediction = self.model.predict([input_data])
        confidence = max(self.model.predict_proba([input_data])[0])
        return {"Downtime": "Yes" if prediction[0] else "No", "Confidence": round(confidence, 2)}
